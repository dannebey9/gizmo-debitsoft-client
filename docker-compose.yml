version: "3"

networks:
  development:

services:
  caddy:
    image: caddy/caddy:2.2.1-alpine
    container_name: caddy-service
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./site:/srv
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - development
  node:
    build:
      context: .
      dockerfile: node.dockerfile
    container_name: node
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - development
    restart: always
    ports:
      - "3000:3000"
    env_file:
      - .env.production
    depends_on:
      - postgres
    command: yarn start
  postgres:
    image: postgres:13.3
    container_name: ${DB_HOST}
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - .:/var/lib/postgresql/data
    ports:
      - "${DB_PORT_EXTERNAL}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5
      # start_period: 10s
    restart: unless-stopped
    networks:
      - development

volumes:
  caddy_data:
  caddy_config:
